<?php
namespace Manage\Controller;
use Think\Controller;
use Home\Classlogic\Weixin_accountClasslogic;
use Home\Classlogic\Wechat_payClasslogic;
class WithdrawalsController extends BaseController {
    private $wechat_config = array();
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $wechat_config = M('wechat_config')->where(array('is_default'=>1))->find();
        $this->wechat_config = $wechat_config;
    }

    public function index(){

//        $class = new Weixin_accountClasslogic($this->wechat_config['id']);
//
//        $file = dirname(dirname(dirname(dirname(__FILE__)))) . "/Uploads/" .$class->get_wechat_rootca();
//        dd($file);

        $wallet_list = M('withdrawal')->where(array('appid'=>$this->wechat_config['appid']))->select();
        if(!empty($wallet_list)){
            foreach($wallet_list as $k=>$item){
                $member = M('member')->where(array('member_id'=>$item['member_id']))->find();
                if($member['nickname']) $wallet_list[$k]['nickname'] = $member['nickname'];
                else $wallet_list[$k]['nickname'] = '未关注用户';
            }
        }
        $this->assign('wallet_list',$wallet_list);
        $this->assign('status',array('审核中','已通过','已拒绝'));
        $this->assign('check_type',array('0'=>'手动审核','1'=>'手动审核','2'=>'自动到账'));

        //金币提现管理

        $coin_list = M('withdrawal_coin')->where(array('appid'=>$this->wechat_config['appid']))->select();
        if(!empty($coin_list)){
            foreach($coin_list as $k=>$item){
                $member = M('member')->where(array('member_id'=>$item['member_id']))->find();
                if($member['nickname']) $coin_list[$k]['nickname'] = $member['nickname'];
                else $coin_list[$k]['nickname'] = '未关注用户';
                $coin_list[$k]['subscribe'] = $member['subscribe'];
            }
        }
        $this->assign('coin_list',$coin_list);
        $this->display();
    }

    public function pass(){
        $id = I('id');
        if(!$id) $this->error("请求错误");
        $item = M('withdrawal')->where(array('id'=>$id))->find();
        if(empty($item)) $this->error("请求错误，数据不存在");
        $member = M('member')->where(array('member_id'=>$item['member_id']))->find();
        if(empty($member) || empty($member['openid'])) $this->error("请求错误，用户不存在");
        //才看分销配置，调用接口操作
        $this->success("审核成功！");
    }

    public function nopass(){
        $id = I('id');
        if(!$id) $this->error("请求错误");
        $item = M('withdrawal')->where(array('id'=>$id))->find();
        if(empty($item)) $this->error("请求错误，数据不存在");
        $member = M('member')->where(array('member_id'=>$item['member_id']))->find();
        if(empty($member) || empty($member['openid'])) $this->error("请求错误，用户不存在");
        M('withdrawal')->where(array('id'=>$id))->save(array('apply_status'=>2));
        M('member')->where(array('member_id'=>$item['member_id']))->save(array('wallet'=>$member['wallet']+$item['apply_cash']));
        $wallet_detail = array(
            'member_id'=>$item['member_id'],
            'before_wallet'=>$member['wallet'],
            'after_wallet'=>$member['wallet']+$item['apply_cash'],
            'appid'=>$this->wechat_config,
            'type'=>1,
            'desc'=>'审核拒绝资金返回 id:'.$id,
            'createtime'=>time(),
        );
        M('member_wallet_detail')->add($wallet_detail);
        $this->success("拒绝成功！");
    }

    /**********************金币提现操作 ********************/
    public function coin_pass(){
        $id = I('id');
        if(!$id) $this->error("请求错误");
        $item = M('withdrawal_coin')->where(array('id'=>$id))->find();
        if(empty($item)) $this->error("请求错误，数据不存在");
        $member = M('member')->where(array('member_id'=>$item['member_id']))->find();
        if(empty($member) || empty($member['openid'])) $this->error("请求错误，用户不存在");
        //才看分销配置，调用接口操作


        $get_member_openid = M('other_pay')->where(array('member_id'=>$item['member_id'],'withdrawal_coin_id'=>$id))->find();
        if(empty($get_member_openid['openid']) || empty($get_member_openid)) $this->error("该用户为获取到openid");
        $class = new Wechat_payClasslogic();
        $class->set_openid($get_member_openid['openid']);
        $class->set_amount($item['apply_coin']);
        $res = $class->get_pay_withdrawal();
        if($res['return_code'] == 'SUCCESS' && $res['result_code'] == 'SUCCESS'){
            $insert['status'] = 1;
            $insert['updatetime'] = time();
            M('other_pay')->where(array('id'=>$get_member_openid['id']))->save($insert);
            $withdrawals_data['partner_trade_no'] = $res['partner_trade_no'];
            $withdrawals_data['payment_no'] = $res['payment_no'];
            $withdrawals_data['payment_time'] = strtotime($res['payment_time']);
            $withdrawals_data['apply_status'] = 1;
            M('withdrawal_coin')->where(array('id'=>$item['id']))->save($withdrawals_data);
          exit( $this->success('审核成功！'));
        }
        exit($this->error($res['return_msg']));
//        $class = new Weixin_accountClasslogic($this->wechat_config['id']);
//        $class->set_openid($member['openid']);
//        $class->set_amount($item['apply_coin']);
//        $res = $class->get_pay_withdrawal();
//        if($res['return_code'] == 'SUCCESS' && $res['result_code'] == 'SUCCESS'){
//            $update = array(
//                'partner_trade_no'=>$res['partner_trade_no'],
//                'payment_no'=>$res['payment_no'],
//                'payment_time'=>strtotime($res['payment_time']),
//                'apply_status'=>1,
//            );
//            M('withdrawal_coin')->where(array('id'=>$id))->save($update);
//            exit($this->success("审核成功！"));
//        }
//        $this->error($res['return_msg']);
    }
    public function coin_nopass(){
        $id = I('id');
        if(!$id) $this->error("请求错误");
        $item = M('withdrawal_coin')->where(array('id'=>$id))->find();
        if(empty($item)) $this->error("请求错误，数据不存在");
        $member = M('member')->where(array('member_id'=>$item['member_id']))->find();
        if(empty($member) || empty($member['openid'])) $this->error("请求错误，用户不存在");
        M('withdrawal_coin')->where(array('id'=>$id))->save(array('apply_status'=>2));
        M('member')->where(array('member_id'=>$item['member_id']))->save(array('coin'=>$member['coin']+$item['apply_coin']));
        $wallet_detail = array(
            'member_id'=>$item['member_id'],
            'before_coin'=>$member['coin'],
            'after_coin'=>$member['coin']+$item['apply_coin'],
            'type'=>1,
            'appid'=>$this->wechat_config,
            'desc'=>'审核拒绝资金返回 id:'.$id,
            'createtime'=>time(),
        );
        M('member_coin_detail')->add($wallet_detail);
        $this->success("拒绝成功！");
    }

}